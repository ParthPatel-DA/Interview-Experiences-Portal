#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCityMaster(CityMaster instance);
  partial void UpdateCityMaster(CityMaster instance);
  partial void DeleteCityMaster(CityMaster instance);
  partial void InsertCountryMaster(CountryMaster instance);
  partial void UpdateCountryMaster(CountryMaster instance);
  partial void DeleteCountryMaster(CountryMaster instance);
  partial void InsertStateMaster(StateMaster instance);
  partial void UpdateStateMaster(StateMaster instance);
  partial void DeleteStateMaster(StateMaster instance);
  partial void InserttblAdmin(tblAdmin instance);
  partial void UpdatetblAdmin(tblAdmin instance);
  partial void DeletetblAdmin(tblAdmin instance);
  partial void InserttblAnswer(tblAnswer instance);
  partial void UpdatetblAnswer(tblAnswer instance);
  partial void DeletetblAnswer(tblAnswer instance);
  partial void InserttblCompany(tblCompany instance);
  partial void UpdatetblCompany(tblCompany instance);
  partial void DeletetblCompany(tblCompany instance);
  partial void InserttblCompanyCity(tblCompanyCity instance);
  partial void UpdatetblCompanyCity(tblCompanyCity instance);
  partial void DeletetblCompanyCity(tblCompanyCity instance);
  partial void InserttblDAIICTStudentData(tblDAIICTStudentData instance);
  partial void UpdatetblDAIICTStudentData(tblDAIICTStudentData instance);
  partial void DeletetblDAIICTStudentData(tblDAIICTStudentData instance);
  partial void InserttblDesignation(tblDesignation instance);
  partial void UpdatetblDesignation(tblDesignation instance);
  partial void DeletetblDesignation(tblDesignation instance);
  partial void InserttblExperience(tblExperience instance);
  partial void UpdatetblExperience(tblExperience instance);
  partial void DeletetblExperience(tblExperience instance);
  partial void InserttblExperienceRound(tblExperienceRound instance);
  partial void UpdatetblExperienceRound(tblExperienceRound instance);
  partial void DeletetblExperienceRound(tblExperienceRound instance);
  partial void InserttblExperiencesQuestion(tblExperiencesQuestion instance);
  partial void UpdatetblExperiencesQuestion(tblExperiencesQuestion instance);
  partial void DeletetblExperiencesQuestion(tblExperiencesQuestion instance);
  partial void InserttblInterested(tblInterested instance);
  partial void UpdatetblInterested(tblInterested instance);
  partial void DeletetblInterested(tblInterested instance);
  partial void InserttblJobType(tblJobType instance);
  partial void UpdatetblJobType(tblJobType instance);
  partial void DeletetblJobType(tblJobType instance);
  partial void InserttblProgram(tblProgram instance);
  partial void UpdatetblProgram(tblProgram instance);
  partial void DeletetblProgram(tblProgram instance);
  partial void InserttblQuestion(tblQuestion instance);
  partial void UpdatetblQuestion(tblQuestion instance);
  partial void DeletetblQuestion(tblQuestion instance);
  partial void InserttblRecruitment(tblRecruitment instance);
  partial void UpdatetblRecruitment(tblRecruitment instance);
  partial void DeletetblRecruitment(tblRecruitment instance);
  partial void InserttblRound(tblRound instance);
  partial void UpdatetblRound(tblRound instance);
  partial void DeletetblRound(tblRound instance);
  partial void InserttblStudent(tblStudent instance);
  partial void UpdatetblStudent(tblStudent instance);
  partial void DeletetblStudent(tblStudent instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DatabaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<CityMaster> CityMasters
	{
		get
		{
			return this.GetTable<CityMaster>();
		}
	}
	
	public System.Data.Linq.Table<CountryMaster> CountryMasters
	{
		get
		{
			return this.GetTable<CountryMaster>();
		}
	}
	
	public System.Data.Linq.Table<StateMaster> StateMasters
	{
		get
		{
			return this.GetTable<StateMaster>();
		}
	}
	
	public System.Data.Linq.Table<tblAdmin> tblAdmins
	{
		get
		{
			return this.GetTable<tblAdmin>();
		}
	}
	
	public System.Data.Linq.Table<tblAnswer> tblAnswers
	{
		get
		{
			return this.GetTable<tblAnswer>();
		}
	}
	
	public System.Data.Linq.Table<tblCompany> tblCompanies
	{
		get
		{
			return this.GetTable<tblCompany>();
		}
	}
	
	public System.Data.Linq.Table<tblCompanyCity> tblCompanyCities
	{
		get
		{
			return this.GetTable<tblCompanyCity>();
		}
	}
	
	public System.Data.Linq.Table<tblDAIICTStudentData> tblDAIICTStudentDatas
	{
		get
		{
			return this.GetTable<tblDAIICTStudentData>();
		}
	}
	
	public System.Data.Linq.Table<tblDesignation> tblDesignations
	{
		get
		{
			return this.GetTable<tblDesignation>();
		}
	}
	
	public System.Data.Linq.Table<tblExperience> tblExperiences
	{
		get
		{
			return this.GetTable<tblExperience>();
		}
	}
	
	public System.Data.Linq.Table<tblExperienceRound> tblExperienceRounds
	{
		get
		{
			return this.GetTable<tblExperienceRound>();
		}
	}
	
	public System.Data.Linq.Table<tblExperiencesQuestion> tblExperiencesQuestions
	{
		get
		{
			return this.GetTable<tblExperiencesQuestion>();
		}
	}
	
	public System.Data.Linq.Table<tblInterested> tblInteresteds
	{
		get
		{
			return this.GetTable<tblInterested>();
		}
	}
	
	public System.Data.Linq.Table<tblJobType> tblJobTypes
	{
		get
		{
			return this.GetTable<tblJobType>();
		}
	}
	
	public System.Data.Linq.Table<tblProgram> tblPrograms
	{
		get
		{
			return this.GetTable<tblProgram>();
		}
	}
	
	public System.Data.Linq.Table<tblQuestion> tblQuestions
	{
		get
		{
			return this.GetTable<tblQuestion>();
		}
	}
	
	public System.Data.Linq.Table<tblRecruitment> tblRecruitments
	{
		get
		{
			return this.GetTable<tblRecruitment>();
		}
	}
	
	public System.Data.Linq.Table<tblRound> tblRounds
	{
		get
		{
			return this.GetTable<tblRound>();
		}
	}
	
	public System.Data.Linq.Table<tblStudent> tblStudents
	{
		get
		{
			return this.GetTable<tblStudent>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CityMaster")]
public partial class CityMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private System.Nullable<int> _StateID;
	
	private EntityRef<StateMaster> _StateMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStateIDChanging(System.Nullable<int> value);
    partial void OnStateIDChanged();
    #endregion
	
	public CityMaster()
	{
		this._StateMaster = default(EntityRef<StateMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
	public System.Nullable<int> StateID
	{
		get
		{
			return this._StateID;
		}
		set
		{
			if ((this._StateID != value))
			{
				if (this._StateMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStateIDChanging(value);
				this.SendPropertyChanging();
				this._StateID = value;
				this.SendPropertyChanged("StateID");
				this.OnStateIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_CityMaster", Storage="_StateMaster", ThisKey="StateID", OtherKey="ID", IsForeignKey=true)]
	public StateMaster StateMaster
	{
		get
		{
			return this._StateMaster.Entity;
		}
		set
		{
			StateMaster previousValue = this._StateMaster.Entity;
			if (((previousValue != value) 
						|| (this._StateMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StateMaster.Entity = null;
					previousValue.CityMasters.Remove(this);
				}
				this._StateMaster.Entity = value;
				if ((value != null))
				{
					value.CityMasters.Add(this);
					this._StateID = value.ID;
				}
				else
				{
					this._StateID = default(Nullable<int>);
				}
				this.SendPropertyChanged("StateMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CountryMaster")]
public partial class CountryMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _CountryCode;
	
	private EntitySet<StateMaster> _StateMasters;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    #endregion
	
	public CountryMaster()
	{
		this._StateMasters = new EntitySet<StateMaster>(new Action<StateMaster>(this.attach_StateMasters), new Action<StateMaster>(this.detach_StateMasters));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="VarChar(5)")]
	public string CountryCode
	{
		get
		{
			return this._CountryCode;
		}
		set
		{
			if ((this._CountryCode != value))
			{
				this.OnCountryCodeChanging(value);
				this.SendPropertyChanging();
				this._CountryCode = value;
				this.SendPropertyChanged("CountryCode");
				this.OnCountryCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryMaster_StateMaster", Storage="_StateMasters", ThisKey="ID", OtherKey="CountryID")]
	public EntitySet<StateMaster> StateMasters
	{
		get
		{
			return this._StateMasters;
		}
		set
		{
			this._StateMasters.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_StateMasters(StateMaster entity)
	{
		this.SendPropertyChanging();
		entity.CountryMaster = this;
	}
	
	private void detach_StateMasters(StateMaster entity)
	{
		this.SendPropertyChanging();
		entity.CountryMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StateMaster")]
public partial class StateMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private System.Nullable<int> _CountryID;
	
	private EntitySet<CityMaster> _CityMasters;
	
	private EntityRef<CountryMaster> _CountryMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    #endregion
	
	public StateMaster()
	{
		this._CityMasters = new EntitySet<CityMaster>(new Action<CityMaster>(this.attach_CityMasters), new Action<CityMaster>(this.detach_CityMasters));
		this._CountryMaster = default(EntityRef<CountryMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
	public System.Nullable<int> CountryID
	{
		get
		{
			return this._CountryID;
		}
		set
		{
			if ((this._CountryID != value))
			{
				if (this._CountryMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCountryIDChanging(value);
				this.SendPropertyChanging();
				this._CountryID = value;
				this.SendPropertyChanged("CountryID");
				this.OnCountryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_CityMaster", Storage="_CityMasters", ThisKey="ID", OtherKey="StateID")]
	public EntitySet<CityMaster> CityMasters
	{
		get
		{
			return this._CityMasters;
		}
		set
		{
			this._CityMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryMaster_StateMaster", Storage="_CountryMaster", ThisKey="CountryID", OtherKey="ID", IsForeignKey=true)]
	public CountryMaster CountryMaster
	{
		get
		{
			return this._CountryMaster.Entity;
		}
		set
		{
			CountryMaster previousValue = this._CountryMaster.Entity;
			if (((previousValue != value) 
						|| (this._CountryMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CountryMaster.Entity = null;
					previousValue.StateMasters.Remove(this);
				}
				this._CountryMaster.Entity = value;
				if ((value != null))
				{
					value.StateMasters.Add(this);
					this._CountryID = value.ID;
				}
				else
				{
					this._CountryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("CountryMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CityMasters(CityMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster = this;
	}
	
	private void detach_CityMasters(CityMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAdmin")]
public partial class tblAdmin : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AdminID;
	
	private string _FirstName;
	
	private string _LastName;
	
	private string _UserName;
	
	private string _Password;
	
	private string _EmailID;
	
	private string _ContactNo;
	
	private bool _IsActive;
	
	private System.Nullable<int> _CreatedBy;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailIDChanging(string value);
    partial void OnEmailIDChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblAdmin()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AdminID
	{
		get
		{
			return this._AdminID;
		}
		set
		{
			if ((this._AdminID != value))
			{
				this.OnAdminIDChanging(value);
				this.SendPropertyChanging();
				this._AdminID = value;
				this.SendPropertyChanged("AdminID");
				this.OnAdminIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
	public string EmailID
	{
		get
		{
			return this._EmailID;
		}
		set
		{
			if ((this._EmailID != value))
			{
				this.OnEmailIDChanging(value);
				this.SendPropertyChanging();
				this._EmailID = value;
				this.SendPropertyChanged("EmailID");
				this.OnEmailIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
	public string ContactNo
	{
		get
		{
			return this._ContactNo;
		}
		set
		{
			if ((this._ContactNo != value))
			{
				this.OnContactNoChanging(value);
				this.SendPropertyChanging();
				this._ContactNo = value;
				this.SendPropertyChanged("ContactNo");
				this.OnContactNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAnswer")]
public partial class tblAnswer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AnswerID;
	
	private string _Answer;
	
	private int _QuestionID;
	
	private int _CreatedBy;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnswerIDChanging(int value);
    partial void OnAnswerIDChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblAnswer()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AnswerID
	{
		get
		{
			return this._AnswerID;
		}
		set
		{
			if ((this._AnswerID != value))
			{
				this.OnAnswerIDChanging(value);
				this.SendPropertyChanging();
				this._AnswerID = value;
				this.SendPropertyChanged("AnswerID");
				this.OnAnswerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Answer
	{
		get
		{
			return this._Answer;
		}
		set
		{
			if ((this._Answer != value))
			{
				this.OnAnswerChanging(value);
				this.SendPropertyChanging();
				this._Answer = value;
				this.SendPropertyChanged("Answer");
				this.OnAnswerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL")]
	public int QuestionID
	{
		get
		{
			return this._QuestionID;
		}
		set
		{
			if ((this._QuestionID != value))
			{
				this.OnQuestionIDChanging(value);
				this.SendPropertyChanging();
				this._QuestionID = value;
				this.SendPropertyChanged("QuestionID");
				this.OnQuestionIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
	public int CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCompany")]
public partial class tblCompany : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CompanyID;
	
	private string _Name;
	
	private string _Description;
	
	private string _Website;
	
	private string _ProfilePic;
	
	private bool _IsActive;
	
	private int _CreatedBy;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnProfilePicChanging(string value);
    partial void OnProfilePicChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblCompany()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CompanyID
	{
		get
		{
			return this._CompanyID;
		}
		set
		{
			if ((this._CompanyID != value))
			{
				this.OnCompanyIDChanging(value);
				this.SendPropertyChanging();
				this._CompanyID = value;
				this.SendPropertyChanged("CompanyID");
				this.OnCompanyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(250)")]
	public string Website
	{
		get
		{
			return this._Website;
		}
		set
		{
			if ((this._Website != value))
			{
				this.OnWebsiteChanging(value);
				this.SendPropertyChanging();
				this._Website = value;
				this.SendPropertyChanged("Website");
				this.OnWebsiteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfilePic", DbType="VarChar(150)")]
	public string ProfilePic
	{
		get
		{
			return this._ProfilePic;
		}
		set
		{
			if ((this._ProfilePic != value))
			{
				this.OnProfilePicChanging(value);
				this.SendPropertyChanging();
				this._ProfilePic = value;
				this.SendPropertyChanged("ProfilePic");
				this.OnProfilePicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
	public int CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCompanyCity")]
public partial class tblCompanyCity : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CompanyCityID;
	
	private int _CompanyID;
	
	private int _CityID;
	
	private int _CreatedBy;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyCityIDChanging(int value);
    partial void OnCompanyCityIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblCompanyCity()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CompanyCityID
	{
		get
		{
			return this._CompanyCityID;
		}
		set
		{
			if ((this._CompanyCityID != value))
			{
				this.OnCompanyCityIDChanging(value);
				this.SendPropertyChanging();
				this._CompanyCityID = value;
				this.SendPropertyChanged("CompanyCityID");
				this.OnCompanyCityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
	public int CompanyID
	{
		get
		{
			return this._CompanyID;
		}
		set
		{
			if ((this._CompanyID != value))
			{
				this.OnCompanyIDChanging(value);
				this.SendPropertyChanging();
				this._CompanyID = value;
				this.SendPropertyChanged("CompanyID");
				this.OnCompanyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int NOT NULL")]
	public int CityID
	{
		get
		{
			return this._CityID;
		}
		set
		{
			if ((this._CityID != value))
			{
				this.OnCityIDChanging(value);
				this.SendPropertyChanging();
				this._CityID = value;
				this.SendPropertyChanged("CityID");
				this.OnCityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
	public int CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDAIICTStudentData")]
public partial class tblDAIICTStudentData : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _StudentID;
	
	private string _FirstName;
	
	private string _LastName;
	
	private string _EmailID;
	
	private string _ContactNo;
	
	private int _CreatedBy;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIDChanging(string value);
    partial void OnStudentIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailIDChanging(string value);
    partial void OnEmailIDChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblDAIICTStudentData()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				this.OnStudentIDChanging(value);
				this.SendPropertyChanging();
				this._StudentID = value;
				this.SendPropertyChanged("StudentID");
				this.OnStudentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
	public string EmailID
	{
		get
		{
			return this._EmailID;
		}
		set
		{
			if ((this._EmailID != value))
			{
				this.OnEmailIDChanging(value);
				this.SendPropertyChanging();
				this._EmailID = value;
				this.SendPropertyChanged("EmailID");
				this.OnEmailIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
	public string ContactNo
	{
		get
		{
			return this._ContactNo;
		}
		set
		{
			if ((this._ContactNo != value))
			{
				this.OnContactNoChanging(value);
				this.SendPropertyChanging();
				this._ContactNo = value;
				this.SendPropertyChanged("ContactNo");
				this.OnContactNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
	public int CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDesignation")]
public partial class tblDesignation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DesignationID;
	
	private string _Name;
	
	private bool _IsDeleted;
	
	private System.Nullable<int> _UpdatedBy;
	
	private System.Nullable<System.DateTime> _UpdatedOn;
	
	private int _CreatedBy;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesignationIDChanging(int value);
    partial void OnDesignationIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblDesignation()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int DesignationID
	{
		get
		{
			return this._DesignationID;
		}
		set
		{
			if ((this._DesignationID != value))
			{
				this.OnDesignationIDChanging(value);
				this.SendPropertyChanging();
				this._DesignationID = value;
				this.SendPropertyChanged("DesignationID");
				this.OnDesignationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
	public bool IsDeleted
	{
		get
		{
			return this._IsDeleted;
		}
		set
		{
			if ((this._IsDeleted != value))
			{
				this.OnIsDeletedChanging(value);
				this.SendPropertyChanging();
				this._IsDeleted = value;
				this.SendPropertyChanged("IsDeleted");
				this.OnIsDeletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
	public System.Nullable<int> UpdatedBy
	{
		get
		{
			return this._UpdatedBy;
		}
		set
		{
			if ((this._UpdatedBy != value))
			{
				this.OnUpdatedByChanging(value);
				this.SendPropertyChanging();
				this._UpdatedBy = value;
				this.SendPropertyChanged("UpdatedBy");
				this.OnUpdatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="Date")]
	public System.Nullable<System.DateTime> UpdatedOn
	{
		get
		{
			return this._UpdatedOn;
		}
		set
		{
			if ((this._UpdatedOn != value))
			{
				this.OnUpdatedOnChanging(value);
				this.SendPropertyChanging();
				this._UpdatedOn = value;
				this.SendPropertyChanged("UpdatedOn");
				this.OnUpdatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
	public int CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblExperience")]
public partial class tblExperience : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ExeperienecesID;
	
	private int _CompanyID;
	
	private int _DesignationID;
	
	private string _Year;
	
	private bool _InCamp;
	
	private int _JobTypeID;
	
	private bool _IsSelected;
	
	private System.Nullable<int> _CTC;
	
	private System.Nullable<int> _CityID;
	
	private int _NoOfRound;
	
	private int _OverallExperienceRate;
	
	private string _Summary;
	
	private bool _IsActive;
	
	private int _CreatedBy;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExeperienecesIDChanging(int value);
    partial void OnExeperienecesIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnDesignationIDChanging(int value);
    partial void OnDesignationIDChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnInCampChanging(bool value);
    partial void OnInCampChanged();
    partial void OnJobTypeIDChanging(int value);
    partial void OnJobTypeIDChanged();
    partial void OnIsSelectedChanging(bool value);
    partial void OnIsSelectedChanged();
    partial void OnCTCChanging(System.Nullable<int> value);
    partial void OnCTCChanged();
    partial void OnCityIDChanging(System.Nullable<int> value);
    partial void OnCityIDChanged();
    partial void OnNoOfRoundChanging(int value);
    partial void OnNoOfRoundChanged();
    partial void OnOverallExperienceRateChanging(int value);
    partial void OnOverallExperienceRateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblExperience()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExeperienecesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ExeperienecesID
	{
		get
		{
			return this._ExeperienecesID;
		}
		set
		{
			if ((this._ExeperienecesID != value))
			{
				this.OnExeperienecesIDChanging(value);
				this.SendPropertyChanging();
				this._ExeperienecesID = value;
				this.SendPropertyChanged("ExeperienecesID");
				this.OnExeperienecesIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
	public int CompanyID
	{
		get
		{
			return this._CompanyID;
		}
		set
		{
			if ((this._CompanyID != value))
			{
				this.OnCompanyIDChanging(value);
				this.SendPropertyChanging();
				this._CompanyID = value;
				this.SendPropertyChanged("CompanyID");
				this.OnCompanyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationID", DbType="Int NOT NULL")]
	public int DesignationID
	{
		get
		{
			return this._DesignationID;
		}
		set
		{
			if ((this._DesignationID != value))
			{
				this.OnDesignationIDChanging(value);
				this.SendPropertyChanging();
				this._DesignationID = value;
				this.SendPropertyChanged("DesignationID");
				this.OnDesignationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
	public string Year
	{
		get
		{
			return this._Year;
		}
		set
		{
			if ((this._Year != value))
			{
				this.OnYearChanging(value);
				this.SendPropertyChanging();
				this._Year = value;
				this.SendPropertyChanged("Year");
				this.OnYearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InCamp", DbType="Bit NOT NULL")]
	public bool InCamp
	{
		get
		{
			return this._InCamp;
		}
		set
		{
			if ((this._InCamp != value))
			{
				this.OnInCampChanging(value);
				this.SendPropertyChanging();
				this._InCamp = value;
				this.SendPropertyChanged("InCamp");
				this.OnInCampChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTypeID", DbType="Int NOT NULL")]
	public int JobTypeID
	{
		get
		{
			return this._JobTypeID;
		}
		set
		{
			if ((this._JobTypeID != value))
			{
				this.OnJobTypeIDChanging(value);
				this.SendPropertyChanging();
				this._JobTypeID = value;
				this.SendPropertyChanged("JobTypeID");
				this.OnJobTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected", DbType="Bit NOT NULL")]
	public bool IsSelected
	{
		get
		{
			return this._IsSelected;
		}
		set
		{
			if ((this._IsSelected != value))
			{
				this.OnIsSelectedChanging(value);
				this.SendPropertyChanging();
				this._IsSelected = value;
				this.SendPropertyChanged("IsSelected");
				this.OnIsSelectedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTC", DbType="Int")]
	public System.Nullable<int> CTC
	{
		get
		{
			return this._CTC;
		}
		set
		{
			if ((this._CTC != value))
			{
				this.OnCTCChanging(value);
				this.SendPropertyChanging();
				this._CTC = value;
				this.SendPropertyChanged("CTC");
				this.OnCTCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int")]
	public System.Nullable<int> CityID
	{
		get
		{
			return this._CityID;
		}
		set
		{
			if ((this._CityID != value))
			{
				this.OnCityIDChanging(value);
				this.SendPropertyChanging();
				this._CityID = value;
				this.SendPropertyChanged("CityID");
				this.OnCityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfRound", DbType="Int NOT NULL")]
	public int NoOfRound
	{
		get
		{
			return this._NoOfRound;
		}
		set
		{
			if ((this._NoOfRound != value))
			{
				this.OnNoOfRoundChanging(value);
				this.SendPropertyChanging();
				this._NoOfRound = value;
				this.SendPropertyChanged("NoOfRound");
				this.OnNoOfRoundChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverallExperienceRate", DbType="Int NOT NULL")]
	public int OverallExperienceRate
	{
		get
		{
			return this._OverallExperienceRate;
		}
		set
		{
			if ((this._OverallExperienceRate != value))
			{
				this.OnOverallExperienceRateChanging(value);
				this.SendPropertyChanging();
				this._OverallExperienceRate = value;
				this.SendPropertyChanged("OverallExperienceRate");
				this.OnOverallExperienceRateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(MAX)")]
	public string Summary
	{
		get
		{
			return this._Summary;
		}
		set
		{
			if ((this._Summary != value))
			{
				this.OnSummaryChanging(value);
				this.SendPropertyChanging();
				this._Summary = value;
				this.SendPropertyChanged("Summary");
				this.OnSummaryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
	public int CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblExperienceRound")]
public partial class tblExperienceRound : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ExperiencesRoundID;
	
	private int _ExperiencesID;
	
	private int _RoundID;
	
	private int _NoOfQuestions;
	
	private int _LevelOfDifficulty;
	
	private System.DateTime _CretaedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExperiencesRoundIDChanging(int value);
    partial void OnExperiencesRoundIDChanged();
    partial void OnExperiencesIDChanging(int value);
    partial void OnExperiencesIDChanged();
    partial void OnRoundIDChanging(int value);
    partial void OnRoundIDChanged();
    partial void OnNoOfQuestionsChanging(int value);
    partial void OnNoOfQuestionsChanged();
    partial void OnLevelOfDifficultyChanging(int value);
    partial void OnLevelOfDifficultyChanged();
    partial void OnCretaedOnChanging(System.DateTime value);
    partial void OnCretaedOnChanged();
    #endregion
	
	public tblExperienceRound()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExperiencesRoundID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ExperiencesRoundID
	{
		get
		{
			return this._ExperiencesRoundID;
		}
		set
		{
			if ((this._ExperiencesRoundID != value))
			{
				this.OnExperiencesRoundIDChanging(value);
				this.SendPropertyChanging();
				this._ExperiencesRoundID = value;
				this.SendPropertyChanged("ExperiencesRoundID");
				this.OnExperiencesRoundIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExperiencesID", DbType="Int NOT NULL")]
	public int ExperiencesID
	{
		get
		{
			return this._ExperiencesID;
		}
		set
		{
			if ((this._ExperiencesID != value))
			{
				this.OnExperiencesIDChanging(value);
				this.SendPropertyChanging();
				this._ExperiencesID = value;
				this.SendPropertyChanged("ExperiencesID");
				this.OnExperiencesIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundID", DbType="Int NOT NULL")]
	public int RoundID
	{
		get
		{
			return this._RoundID;
		}
		set
		{
			if ((this._RoundID != value))
			{
				this.OnRoundIDChanging(value);
				this.SendPropertyChanging();
				this._RoundID = value;
				this.SendPropertyChanged("RoundID");
				this.OnRoundIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfQuestions", DbType="Int NOT NULL")]
	public int NoOfQuestions
	{
		get
		{
			return this._NoOfQuestions;
		}
		set
		{
			if ((this._NoOfQuestions != value))
			{
				this.OnNoOfQuestionsChanging(value);
				this.SendPropertyChanging();
				this._NoOfQuestions = value;
				this.SendPropertyChanged("NoOfQuestions");
				this.OnNoOfQuestionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelOfDifficulty", DbType="Int NOT NULL")]
	public int LevelOfDifficulty
	{
		get
		{
			return this._LevelOfDifficulty;
		}
		set
		{
			if ((this._LevelOfDifficulty != value))
			{
				this.OnLevelOfDifficultyChanging(value);
				this.SendPropertyChanging();
				this._LevelOfDifficulty = value;
				this.SendPropertyChanged("LevelOfDifficulty");
				this.OnLevelOfDifficultyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CretaedOn", DbType="Date NOT NULL")]
	public System.DateTime CretaedOn
	{
		get
		{
			return this._CretaedOn;
		}
		set
		{
			if ((this._CretaedOn != value))
			{
				this.OnCretaedOnChanging(value);
				this.SendPropertyChanging();
				this._CretaedOn = value;
				this.SendPropertyChanged("CretaedOn");
				this.OnCretaedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblExperiencesQuestion")]
public partial class tblExperiencesQuestion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ExperiencesQuestionID;
	
	private int _ExperiencesRoundID;
	
	private string _Question;
	
	private string _Answer;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExperiencesQuestionIDChanging(int value);
    partial void OnExperiencesQuestionIDChanged();
    partial void OnExperiencesRoundIDChanging(int value);
    partial void OnExperiencesRoundIDChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblExperiencesQuestion()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExperiencesQuestionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ExperiencesQuestionID
	{
		get
		{
			return this._ExperiencesQuestionID;
		}
		set
		{
			if ((this._ExperiencesQuestionID != value))
			{
				this.OnExperiencesQuestionIDChanging(value);
				this.SendPropertyChanging();
				this._ExperiencesQuestionID = value;
				this.SendPropertyChanged("ExperiencesQuestionID");
				this.OnExperiencesQuestionIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExperiencesRoundID", DbType="Int NOT NULL")]
	public int ExperiencesRoundID
	{
		get
		{
			return this._ExperiencesRoundID;
		}
		set
		{
			if ((this._ExperiencesRoundID != value))
			{
				this.OnExperiencesRoundIDChanging(value);
				this.SendPropertyChanging();
				this._ExperiencesRoundID = value;
				this.SendPropertyChanged("ExperiencesRoundID");
				this.OnExperiencesRoundIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
	public string Question
	{
		get
		{
			return this._Question;
		}
		set
		{
			if ((this._Question != value))
			{
				this.OnQuestionChanging(value);
				this.SendPropertyChanging();
				this._Question = value;
				this.SendPropertyChanged("Question");
				this.OnQuestionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="VarChar(MAX)")]
	public string Answer
	{
		get
		{
			return this._Answer;
		}
		set
		{
			if ((this._Answer != value))
			{
				this.OnAnswerChanging(value);
				this.SendPropertyChanging();
				this._Answer = value;
				this.SendPropertyChanged("Answer");
				this.OnAnswerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblInterested")]
public partial class tblInterested : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _InterestedID;
	
	private int _CompanyID;
	
	private bool _IsActive;
	
	private int _StudentID;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInterestedIDChanging(int value);
    partial void OnInterestedIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblInterested()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestedID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int InterestedID
	{
		get
		{
			return this._InterestedID;
		}
		set
		{
			if ((this._InterestedID != value))
			{
				this.OnInterestedIDChanging(value);
				this.SendPropertyChanging();
				this._InterestedID = value;
				this.SendPropertyChanged("InterestedID");
				this.OnInterestedIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
	public int CompanyID
	{
		get
		{
			return this._CompanyID;
		}
		set
		{
			if ((this._CompanyID != value))
			{
				this.OnCompanyIDChanging(value);
				this.SendPropertyChanging();
				this._CompanyID = value;
				this.SendPropertyChanged("CompanyID");
				this.OnCompanyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
	public int StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				this.OnStudentIDChanging(value);
				this.SendPropertyChanging();
				this._StudentID = value;
				this.SendPropertyChanged("StudentID");
				this.OnStudentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblJobType")]
public partial class tblJobType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _JobTypeID;
	
	private string _JobType;
	
	private int _CreatedBy;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobTypeIDChanging(int value);
    partial void OnJobTypeIDChanged();
    partial void OnJobTypeChanging(string value);
    partial void OnJobTypeChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblJobType()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int JobTypeID
	{
		get
		{
			return this._JobTypeID;
		}
		set
		{
			if ((this._JobTypeID != value))
			{
				this.OnJobTypeIDChanging(value);
				this.SendPropertyChanging();
				this._JobTypeID = value;
				this.SendPropertyChanged("JobTypeID");
				this.OnJobTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string JobType
	{
		get
		{
			return this._JobType;
		}
		set
		{
			if ((this._JobType != value))
			{
				this.OnJobTypeChanging(value);
				this.SendPropertyChanging();
				this._JobType = value;
				this.SendPropertyChanged("JobType");
				this.OnJobTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
	public int CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProgram")]
public partial class tblProgram : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProgramID;
	
	private string _ProgramCode;
	
	private string _ProgramName;
	
	private bool _IsActive;
	
	private int _CreatedBy;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramIDChanging(int value);
    partial void OnProgramIDChanged();
    partial void OnProgramCodeChanging(string value);
    partial void OnProgramCodeChanged();
    partial void OnProgramNameChanging(string value);
    partial void OnProgramNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblProgram()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProgramID
	{
		get
		{
			return this._ProgramID;
		}
		set
		{
			if ((this._ProgramID != value))
			{
				this.OnProgramIDChanging(value);
				this.SendPropertyChanging();
				this._ProgramID = value;
				this.SendPropertyChanged("ProgramID");
				this.OnProgramIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramCode", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
	public string ProgramCode
	{
		get
		{
			return this._ProgramCode;
		}
		set
		{
			if ((this._ProgramCode != value))
			{
				this.OnProgramCodeChanging(value);
				this.SendPropertyChanging();
				this._ProgramCode = value;
				this.SendPropertyChanged("ProgramCode");
				this.OnProgramCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramName", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string ProgramName
	{
		get
		{
			return this._ProgramName;
		}
		set
		{
			if ((this._ProgramName != value))
			{
				this.OnProgramNameChanging(value);
				this.SendPropertyChanging();
				this._ProgramName = value;
				this.SendPropertyChanged("ProgramName");
				this.OnProgramNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
	public int CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblQuestion")]
public partial class tblQuestion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _QuestionID;
	
	private string _Question;
	
	private int _CreatedBy;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblQuestion()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int QuestionID
	{
		get
		{
			return this._QuestionID;
		}
		set
		{
			if ((this._QuestionID != value))
			{
				this.OnQuestionIDChanging(value);
				this.SendPropertyChanging();
				this._QuestionID = value;
				this.SendPropertyChanged("QuestionID");
				this.OnQuestionIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Question
	{
		get
		{
			return this._Question;
		}
		set
		{
			if ((this._Question != value))
			{
				this.OnQuestionChanging(value);
				this.SendPropertyChanging();
				this._Question = value;
				this.SendPropertyChanged("Question");
				this.OnQuestionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
	public int CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRecruitment")]
public partial class tblRecruitment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RecruitmentID;
	
	private int _CompanyID;
	
	private int _ProgramID;
	
	private int _NoOfSelectedStudent;
	
	private int _NoOfAppearedStudent;
	
	private string _Year;
	
	private int _Package;
	
	private int _DesignationID;
	
	private int _CreatedBy;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecruitmentIDChanging(int value);
    partial void OnRecruitmentIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnProgramIDChanging(int value);
    partial void OnProgramIDChanged();
    partial void OnNoOfSelectedStudentChanging(int value);
    partial void OnNoOfSelectedStudentChanged();
    partial void OnNoOfAppearedStudentChanging(int value);
    partial void OnNoOfAppearedStudentChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnPackageChanging(int value);
    partial void OnPackageChanged();
    partial void OnDesignationIDChanging(int value);
    partial void OnDesignationIDChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblRecruitment()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecruitmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RecruitmentID
	{
		get
		{
			return this._RecruitmentID;
		}
		set
		{
			if ((this._RecruitmentID != value))
			{
				this.OnRecruitmentIDChanging(value);
				this.SendPropertyChanging();
				this._RecruitmentID = value;
				this.SendPropertyChanged("RecruitmentID");
				this.OnRecruitmentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
	public int CompanyID
	{
		get
		{
			return this._CompanyID;
		}
		set
		{
			if ((this._CompanyID != value))
			{
				this.OnCompanyIDChanging(value);
				this.SendPropertyChanging();
				this._CompanyID = value;
				this.SendPropertyChanged("CompanyID");
				this.OnCompanyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramID", DbType="Int NOT NULL")]
	public int ProgramID
	{
		get
		{
			return this._ProgramID;
		}
		set
		{
			if ((this._ProgramID != value))
			{
				this.OnProgramIDChanging(value);
				this.SendPropertyChanging();
				this._ProgramID = value;
				this.SendPropertyChanged("ProgramID");
				this.OnProgramIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfSelectedStudent", DbType="Int NOT NULL")]
	public int NoOfSelectedStudent
	{
		get
		{
			return this._NoOfSelectedStudent;
		}
		set
		{
			if ((this._NoOfSelectedStudent != value))
			{
				this.OnNoOfSelectedStudentChanging(value);
				this.SendPropertyChanging();
				this._NoOfSelectedStudent = value;
				this.SendPropertyChanged("NoOfSelectedStudent");
				this.OnNoOfSelectedStudentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfAppearedStudent", DbType="Int NOT NULL")]
	public int NoOfAppearedStudent
	{
		get
		{
			return this._NoOfAppearedStudent;
		}
		set
		{
			if ((this._NoOfAppearedStudent != value))
			{
				this.OnNoOfAppearedStudentChanging(value);
				this.SendPropertyChanging();
				this._NoOfAppearedStudent = value;
				this.SendPropertyChanged("NoOfAppearedStudent");
				this.OnNoOfAppearedStudentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
	public string Year
	{
		get
		{
			return this._Year;
		}
		set
		{
			if ((this._Year != value))
			{
				this.OnYearChanging(value);
				this.SendPropertyChanging();
				this._Year = value;
				this.SendPropertyChanged("Year");
				this.OnYearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Package", DbType="Int NOT NULL")]
	public int Package
	{
		get
		{
			return this._Package;
		}
		set
		{
			if ((this._Package != value))
			{
				this.OnPackageChanging(value);
				this.SendPropertyChanging();
				this._Package = value;
				this.SendPropertyChanged("Package");
				this.OnPackageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationID", DbType="Int NOT NULL")]
	public int DesignationID
	{
		get
		{
			return this._DesignationID;
		}
		set
		{
			if ((this._DesignationID != value))
			{
				this.OnDesignationIDChanging(value);
				this.SendPropertyChanging();
				this._DesignationID = value;
				this.SendPropertyChanged("DesignationID");
				this.OnDesignationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
	public int CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRound")]
public partial class tblRound : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RoundID;
	
	private string _RoundName;
	
	private int _CreatedBy;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoundIDChanging(int value);
    partial void OnRoundIDChanged();
    partial void OnRoundNameChanging(string value);
    partial void OnRoundNameChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblRound()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RoundID
	{
		get
		{
			return this._RoundID;
		}
		set
		{
			if ((this._RoundID != value))
			{
				this.OnRoundIDChanging(value);
				this.SendPropertyChanging();
				this._RoundID = value;
				this.SendPropertyChanged("RoundID");
				this.OnRoundIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string RoundName
	{
		get
		{
			return this._RoundName;
		}
		set
		{
			if ((this._RoundName != value))
			{
				this.OnRoundNameChanging(value);
				this.SendPropertyChanging();
				this._RoundName = value;
				this.SendPropertyChanged("RoundName");
				this.OnRoundNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
	public int CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStudent")]
public partial class tblStudent : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _StudentID;
	
	private string _DAID;
	
	private string _FirstName;
	
	private string _LastName;
	
	private string _UserName;
	
	private string _Password;
	
	private string _EmailID;
	
	private int _Gender;
	
	private string _ContactNo;
	
	private string _ProfilePic;
	
	private string _Resume;
	
	private string _LinkedIn;
	
	private string _GitHub;
	
	private string _StackOverflow;
	
	private string _HeakerEarth;
	
	private string _HeakerRank;
	
	private string _Codechef;
	
	private string _Codeforce;
	
	private bool _IsBlocked;
	
	private bool _IsVerify;
	
	private string _VerificationCode;
	
	private System.DateTime _CreatedOn;
	
	private System.DateTime _LastLogin;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnDAIDChanging(string value);
    partial void OnDAIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailIDChanging(string value);
    partial void OnEmailIDChanged();
    partial void OnGenderChanging(int value);
    partial void OnGenderChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnProfilePicChanging(string value);
    partial void OnProfilePicChanged();
    partial void OnResumeChanging(string value);
    partial void OnResumeChanged();
    partial void OnLinkedInChanging(string value);
    partial void OnLinkedInChanged();
    partial void OnGitHubChanging(string value);
    partial void OnGitHubChanged();
    partial void OnStackOverflowChanging(string value);
    partial void OnStackOverflowChanged();
    partial void OnHeakerEarthChanging(string value);
    partial void OnHeakerEarthChanged();
    partial void OnHeakerRankChanging(string value);
    partial void OnHeakerRankChanged();
    partial void OnCodechefChanging(string value);
    partial void OnCodechefChanged();
    partial void OnCodeforceChanging(string value);
    partial void OnCodeforceChanged();
    partial void OnIsBlockedChanging(bool value);
    partial void OnIsBlockedChanged();
    partial void OnIsVerifyChanging(bool value);
    partial void OnIsVerifyChanged();
    partial void OnVerificationCodeChanging(string value);
    partial void OnVerificationCodeChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnLastLoginChanging(System.DateTime value);
    partial void OnLastLoginChanged();
    #endregion
	
	public tblStudent()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int StudentID
	{
		get
		{
			return this._StudentID;
		}
		set
		{
			if ((this._StudentID != value))
			{
				this.OnStudentIDChanging(value);
				this.SendPropertyChanging();
				this._StudentID = value;
				this.SendPropertyChanged("StudentID");
				this.OnStudentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAID", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
	public string DAID
	{
		get
		{
			return this._DAID;
		}
		set
		{
			if ((this._DAID != value))
			{
				this.OnDAIDChanging(value);
				this.SendPropertyChanging();
				this._DAID = value;
				this.SendPropertyChanged("DAID");
				this.OnDAIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
	public string EmailID
	{
		get
		{
			return this._EmailID;
		}
		set
		{
			if ((this._EmailID != value))
			{
				this.OnEmailIDChanging(value);
				this.SendPropertyChanging();
				this._EmailID = value;
				this.SendPropertyChanged("EmailID");
				this.OnEmailIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Int NOT NULL")]
	public int Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
	public string ContactNo
	{
		get
		{
			return this._ContactNo;
		}
		set
		{
			if ((this._ContactNo != value))
			{
				this.OnContactNoChanging(value);
				this.SendPropertyChanging();
				this._ContactNo = value;
				this.SendPropertyChanged("ContactNo");
				this.OnContactNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfilePic", DbType="VarChar(100)")]
	public string ProfilePic
	{
		get
		{
			return this._ProfilePic;
		}
		set
		{
			if ((this._ProfilePic != value))
			{
				this.OnProfilePicChanging(value);
				this.SendPropertyChanging();
				this._ProfilePic = value;
				this.SendPropertyChanged("ProfilePic");
				this.OnProfilePicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resume", DbType="VarChar(256)")]
	public string Resume
	{
		get
		{
			return this._Resume;
		}
		set
		{
			if ((this._Resume != value))
			{
				this.OnResumeChanging(value);
				this.SendPropertyChanging();
				this._Resume = value;
				this.SendPropertyChanged("Resume");
				this.OnResumeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedIn", DbType="VarChar(256)")]
	public string LinkedIn
	{
		get
		{
			return this._LinkedIn;
		}
		set
		{
			if ((this._LinkedIn != value))
			{
				this.OnLinkedInChanging(value);
				this.SendPropertyChanging();
				this._LinkedIn = value;
				this.SendPropertyChanged("LinkedIn");
				this.OnLinkedInChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GitHub", DbType="VarChar(256)")]
	public string GitHub
	{
		get
		{
			return this._GitHub;
		}
		set
		{
			if ((this._GitHub != value))
			{
				this.OnGitHubChanging(value);
				this.SendPropertyChanging();
				this._GitHub = value;
				this.SendPropertyChanged("GitHub");
				this.OnGitHubChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StackOverflow", DbType="VarChar(256)")]
	public string StackOverflow
	{
		get
		{
			return this._StackOverflow;
		}
		set
		{
			if ((this._StackOverflow != value))
			{
				this.OnStackOverflowChanging(value);
				this.SendPropertyChanging();
				this._StackOverflow = value;
				this.SendPropertyChanged("StackOverflow");
				this.OnStackOverflowChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeakerEarth", DbType="VarChar(256)")]
	public string HeakerEarth
	{
		get
		{
			return this._HeakerEarth;
		}
		set
		{
			if ((this._HeakerEarth != value))
			{
				this.OnHeakerEarthChanging(value);
				this.SendPropertyChanging();
				this._HeakerEarth = value;
				this.SendPropertyChanged("HeakerEarth");
				this.OnHeakerEarthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeakerRank", DbType="VarChar(256)")]
	public string HeakerRank
	{
		get
		{
			return this._HeakerRank;
		}
		set
		{
			if ((this._HeakerRank != value))
			{
				this.OnHeakerRankChanging(value);
				this.SendPropertyChanging();
				this._HeakerRank = value;
				this.SendPropertyChanged("HeakerRank");
				this.OnHeakerRankChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codechef", DbType="VarChar(256)")]
	public string Codechef
	{
		get
		{
			return this._Codechef;
		}
		set
		{
			if ((this._Codechef != value))
			{
				this.OnCodechefChanging(value);
				this.SendPropertyChanging();
				this._Codechef = value;
				this.SendPropertyChanged("Codechef");
				this.OnCodechefChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codeforce", DbType="VarChar(256)")]
	public string Codeforce
	{
		get
		{
			return this._Codeforce;
		}
		set
		{
			if ((this._Codeforce != value))
			{
				this.OnCodeforceChanging(value);
				this.SendPropertyChanging();
				this._Codeforce = value;
				this.SendPropertyChanged("Codeforce");
				this.OnCodeforceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBlocked", DbType="Bit NOT NULL")]
	public bool IsBlocked
	{
		get
		{
			return this._IsBlocked;
		}
		set
		{
			if ((this._IsBlocked != value))
			{
				this.OnIsBlockedChanging(value);
				this.SendPropertyChanging();
				this._IsBlocked = value;
				this.SendPropertyChanged("IsBlocked");
				this.OnIsBlockedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVerify", DbType="Bit NOT NULL")]
	public bool IsVerify
	{
		get
		{
			return this._IsVerify;
		}
		set
		{
			if ((this._IsVerify != value))
			{
				this.OnIsVerifyChanging(value);
				this.SendPropertyChanging();
				this._IsVerify = value;
				this.SendPropertyChanged("IsVerify");
				this.OnIsVerifyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationCode", DbType="VarChar(15)")]
	public string VerificationCode
	{
		get
		{
			return this._VerificationCode;
		}
		set
		{
			if ((this._VerificationCode != value))
			{
				this.OnVerificationCodeChanging(value);
				this.SendPropertyChanging();
				this._VerificationCode = value;
				this.SendPropertyChanged("VerificationCode");
				this.OnVerificationCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime NOT NULL")]
	public System.DateTime LastLogin
	{
		get
		{
			return this._LastLogin;
		}
		set
		{
			if ((this._LastLogin != value))
			{
				this.OnLastLoginChanging(value);
				this.SendPropertyChanging();
				this._LastLogin = value;
				this.SendPropertyChanged("LastLogin");
				this.OnLastLoginChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
